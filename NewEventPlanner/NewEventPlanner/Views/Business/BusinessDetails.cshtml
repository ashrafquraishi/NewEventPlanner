@model NewEventPlanner.Models.Business

@{
    ViewBag.Title = "Business Details for" + Model.VenueName;
}

<h2>@ViewBag.Title</h2>


<div>

    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.VenueName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.VenueName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Address)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Address)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.City)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.City)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.State)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.State)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ZipCode)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ZipCode)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Phone)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Phone)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Capacity)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Capacity)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Price)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Price)
        </dd>



    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>
<!DOCTYPE html>
<html>
<head>
    <title>Simple Map</title>
    <meta name="viewport" content="initial-scale=1.0">
    <meta charset="utf-8">
    <style>
        #map {
            height: 520px;
            width: 100%;
        }
    </style>
</head>
<body>
    <div id="map"></div>
    Single User Map
    <script>
        var geocoder;
        var map;
        function initMap() {
            geocoder = new google.maps.Geocoder();
            var mapOptions = {
                zoom: 8,
                center: { lat: 43.0115, lng: -87.9735 }
            }
            map = new google.maps.Map(document.getElementById('map'), mapOptions);
            var street = "@Model.Address";
            var zip = "@Model.ZipCode";
            //var street = "@ViewBag.Address";
            //var zip = "@ViewBag.ZipCode";
            var address = (street + " " + zip + " ");
            geocoder.geocode({ 'address': address }, function (results, status) {
                if (status == 'OK') {
                    map.setCenter(results[0].geometry.location);
                    var marker = new google.maps.Marker({
                        map: map,
                        animation: google.maps.Animation.BOUNCE,
                        position: results[0].geometry.location
                    });
                } else {
                    alert('Geocode was not successful for the following reason: ' + status);
                }
            });
        }
    </script>
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAnG-Bofe_gSBPhvaqdNBYkRGONr6U0gys&callback=initMap" type="text/javascript"></script>
</body>
</html>